
import java.io.InputStream;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.apache.jena.query.Query;
import org.apache.jena.query.QueryExecution;
import org.apache.jena.query.QueryExecutionFactory;
import org.apache.jena.query.QueryFactory;
import org.apache.jena.query.QuerySolution;
import org.apache.jena.query.ResultSet;
import org.apache.jena.rdf.model.Model;
import org.apache.jena.rdf.model.RDFNode;
import org.apache.jena.util.FileManager;

/**
 *
 * @author mnb
 */
public class BiryaniUI extends javax.swing.JFrame {

    /**
     * Creates new form BiryaniUI
     */
    public BiryaniUI() {
        initComponents();
        jComboBox10.setVisible(false);
        jTable1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox10 = new javax.swing.JComboBox();
        jComboBox9 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setForeground(new java.awt.Color(51, 51, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Indian", "Non Indian", "Named" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 134, 35));

        jTextField1.setText("500");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 60, 30));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Haettenschweiler", 2, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Biriyani Types");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, 280, 60));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 130, 40));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 310, 180));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("    Main Biriyani Types");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 136, 35));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("    Meat Types");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 136, 35));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chicken", "Beef", "Mutton","Prawn" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 134, 35));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Select Calorie Prference");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 170, 35));

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Extreme Amount", "Regular Amount", "Small Amount","Large Amount" }));
        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 134, 35));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Above", "Below"}));
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 134, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Calories");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 136, 35));

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chicken", "Mutton"}));
        jComboBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox10ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 134, 35));

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Brinjal", "Salad","Korma","DhaiChutney","Ratia"}));
        jComboBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox9ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 134, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("    Spices & Condiments");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 150, 35));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Biriyani Type", "Calorie"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 270, 310, 170));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("SideDish");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 136, 35));

        jLabel1.setIcon(new javax.swing.ImageIcon("F:\\ACA\\sementicWeb\\PROJECT\\TTTTTTTTTTTT\\Biryani\\src\\main\\resources\\biryani-banner.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 883, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//Create the combo box, select item at index 4.
//Indices start at 0, so 4 specifies the pig.
    public String varData2 = null;
    public String varText = "500";

    // public String 
    private ArrayList<String> subCategories = new ArrayList<String>();
    private ArrayList<String> meatCategories = new ArrayList<String>();

    public Model getModelData() {
        Model model = FileManager.get().loadModel("F:\\ACA\\sementicWeb\\PROJECT\\TTTTTTTTTTTT\\Biryani\\src\\main\\java\\biriyani.owl");
        return model;
    }

    public String getPrefixData() {
        String prefix = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> "
                + "PREFIX owl: <http://www.w3.org/2002/07/owl#> "
                + "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> "
                + "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> "
                + "PREFIX biriyani: <http://www.semanticweb.org/madushika/ontologies/2019/6/Biriyani#> ";
        return prefix;
    }

    public void getMeatData() {
        varData2 = null;
        varData2 = String.valueOf(jComboBox5.getSelectedItem()); //Type
        if ("Chicken".equals(varData2)) {
            meatCategories.clear();
            varData2 = "hasChicken";
        } else if ("Mutton".equals(varData2)) {
            meatCategories.clear();
            varData2 = "hasMutton";

        }

        Model model = getModelData();

        String queryString
                = getPrefixData() + "SELECT ?object WHERE { ?subject  biriyani:" + varData2 + " ?object}GROUP BY ?object";

        Query query11 = QueryFactory.create(queryString);

        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);

        meatCategories.clear();
        try {
            ResultSet resultSet = qexec11.execSelect();
            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                RDFNode meat = solution.get("object");
                System.out.println(meat + "++====++++++++++++");
                meatCategories.add((meat.toString().split("#")[1]).trim());

            }
            jComboBox10.setModel(new DefaultComboBoxModel(meatCategories.toArray()));
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        jTextArea1.setVisible(true);
        jTable1.setVisible(false);
        jComboBox2.getSelectedItem();
        varData2 = String.valueOf(jComboBox2.getSelectedItem()); //Type
        if ("Indian".equals(varData2)) {
            varData2 = "Indian";
        } else if ("Named".equals(varData2)) {
            varData2 = "NamedBiriyani";
        } else {
            varData2 = "NonIndian";//
        }

        Model model = getModelData();

        String queryString
                = /* 
                        "SELECT ?subProperties WHERE {" +
                        "   ?subProperties rdfs:subClassOf biriyani:" +var2 +
                        "}";
                
                 */ getPrefixData() + "SELECT ?subject WHERE { ?subject biriyani:isTypeOf biriyani:" + varData2 + " }";

        Query query11 = QueryFactory.create(queryString);

        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);

        subCategories.clear();

        try {
            ResultSet resultSet = qexec11.execSelect();
            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                RDFNode name = solution.get("subject");
                subCategories.add(name.toString().split("#")[1]);
            }
            jTextArea1.setText("");
            // Array dataList[];
            String[] dataList = subCategories.toArray(new String[subCategories.size()]);
            String newLine = System.getProperty("line.separator");
            for (int i = 0; i < dataList.length; i++) {
                jTextArea1.append("  " + dataList[i].toString() + newLine);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        searchFullData();

    }//GEN-LAST:event_jButton1ActionPerformed

    public void searchFullData() {

        String mainBiryani = String.valueOf(jComboBox2.getSelectedItem());
        String meatType = String.valueOf(jComboBox5.getSelectedItem());
        String meatSubtype = String.valueOf(jComboBox10.getSelectedItem());
        String spices = String.valueOf(jComboBox7.getSelectedItem());
        String sideDish = String.valueOf(jComboBox9.getSelectedItem());
        String caloryVal = String.valueOf(jTextField1.getText());
        String calHLval = String.valueOf(jComboBox8.getSelectedItem());

        String subMeatBiriyani = " ";
        String hasmeatSubtype = "";
        //main biriyani
        if ("Indian".equals(mainBiryani)) {
            mainBiryani = "Indian";
        } else if ("Named".equals(mainBiryani)) {
            mainBiryani = "NamedBiriyani";
        } else if ("Non Indian".equals(mainBiryani)) {
            mainBiryani = "NonIndian";
        } //meat type
        else if ("Chicken".equals(meatType)) {
            meatType = "Chicken";
            if ("RosedChicken".equals(meatSubtype)) {
                hasmeatSubtype = "hasChicken";

            } else if ("SliceChicken".equals(meatSubtype)) {
                hasmeatSubtype = "hasChicken";
            } else if ("TandooriChicken".equals(meatSubtype)) {
                hasmeatSubtype = "hasChicken";
            }

            subMeatBiriyani = "?subject biriyani:" + hasmeatSubtype + " biriyani:" + meatSubtype + ".";

        } else if ("Beef".equals(meatType)) {
            meatType = "Beef";

        } else if ("Prawn".equals(meatType)) {
            meatType = "Prawn";

        } else if ("Mutton".equals(meatType)) {
            meatType = "Mutton";

            if ("Mutton".equals(meatSubtype)) {
                hasmeatSubtype = "hasMutton";
            } else if ("Lamb".equals(meatSubtype)) {
                hasmeatSubtype = "hasMutton";
            }
            subMeatBiriyani = "?subject biriyani:" + hasmeatSubtype + " biriyani:" + meatSubtype + ".";

        } //sub meat
        //spices
         if ("Extreme Amount".equals(spices)) {
            spices = "ExtremeAmount";
        } else if ("Large Amount".equals(spices)) {
            spices = "LargeAmount";
        } else if ("Small Amount".equals(spices)) {
            spices = "SmallAmount";
        } else if ("Regular Amount".equals(spices)) {
            spices = "RegularAmount";
        }

        //sideDish
        sideDish = sideDish;

        //Cal val
        caloryVal = caloryVal;

        //calHLval
        if (0 == jComboBox8.getSelectedIndex()) {
            calHLval = ">";
        } else if (1 == jComboBox8.getSelectedIndex()) {
            calHLval = "<";
        }

        String mainTypeBiryani = "?subject biriyani:isTypeOf biriyani:" + mainBiryani + ".";
        String meatTypeBiryani = "?subject biriyani:hasMeat ?obj.";
        String spicesAmountBiryani = "?subject biriyani:hasSpices biriyani:" + spices + ".";
        String sideDishBiryani = "?subject biriyani:hasSideDish biriyani:" + sideDish + ".";

        String caloryBiriyani = "?subject biriyani:hasCaloryValue ?object."
                + "FILTER(?object " + calHLval + "" + caloryVal + ") }GROUP BY  ?subject ?object ";

        Model model = getModelData();

        String queryString = getPrefixData()
                + "SELECT ?subject ?object "
                + "WHERE { "
                + mainTypeBiryani
                + meatTypeBiryani
                + subMeatBiriyani
                + spicesAmountBiryani
                + sideDishBiryani
                + caloryBiriyani;

        
        System.out.println(queryString+"============================");
        Query query11 = QueryFactory.create(queryString);
        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);
        //jTextField3.setText("");
        System.out.println(qexec11+"============================");
          subCategories.clear();
        try {
            
            ResultSet resultSet = qexec11.execSelect();
            jTextArea1.setText("");

            DefaultTableModel model2;
            model2 = (DefaultTableModel) jTable1.getModel();
            model2.setRowCount(0);

            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                  System.out.println(solution+"======/////======================");
                RDFNode bir = solution.get("subject");
                RDFNode obj = solution.get("object");
                System.out.println(bir+"============================");
                System.out.println(obj+"============================");
                System.out.println(bir.toString().split("#")[1]);
                subCategories.add(bir.toString().split("#")[1]);
                subCategories.add(obj.toString().split("http")[0].replace("^^", ""));

            }
            // Array dataList[];
            String[] dataList = subCategories.toArray(new String[subCategories.size()]);
            String newLine = System.getProperty("line.separator");
            for (int i = 0; i < dataList.length; i++) {

                model2.addRow(new Object[]{dataList[i], dataList[i + 1]});

                jTextArea1.append("  " + dataList[i].toString() + newLine);
                i++;

            }
    
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost

    }//GEN-LAST:event_jTextField1FocusLost

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
        jTable1.setVisible(false);
        jTextArea1.setVisible(true);
        jComboBox5.getSelectedItem();
        varData2 = String.valueOf(jComboBox5.getSelectedItem());
        String queryString = "";
        if ("Chicken".equals(varData2)) {
            varData2 = "Chicken";
            getMeatData();
            jComboBox10.setVisible(true);
             queryString = getPrefixData() + "SELECT ?subject ?obj WHERE { ?subject biriyani:hasMeat ?obj}";

        } else if ("Beef".equals(varData2)) {
            varData2 = "Beef";
            jComboBox10.setVisible(false);
             queryString = getPrefixData() + "SELECT ?subject WHERE { ?subject biriyani:hasMeat biriyani:" + varData2 + " }";
        } else if ("Prawn".equals(varData2)) {
            varData2 = "Prawn";
            jComboBox10.setVisible(false);
             queryString = getPrefixData() + "SELECT ?subject WHERE { ?subject biriyani:hasMeat biriyani:" + varData2 + " }";
        } else if ("Mutton".equals(varData2)) {
            varData2 = "Mutton";
            getMeatData();
            jComboBox10.setVisible(true);
             queryString = getPrefixData() + "SELECT ?subject ?obj WHERE { ?subject biriyani:hasMeat ?obj }";
        }

        Model model = getModelData();

       

        Query query11 = QueryFactory.create(queryString);

        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);
        System.out.println("======" + qexec11);
        subCategories.clear();

        try {
            ResultSet resultSet = qexec11.execSelect();
            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                RDFNode name = solution.get("subject");
                subCategories.add(name.toString().split("#")[1]);
            }
            jTextArea1.setText("");
            // Array dataList[];
            String[] dataList = subCategories.toArray(new String[subCategories.size()]);
            String newLine = System.getProperty("line.separator");
            for (int i = 0; i < dataList.length; i++) {
                jTextArea1.append("  " + dataList[i].toString() + newLine);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        // TODO add your handling code here:
        jTable1.setVisible(false);
        jTextArea1.setVisible(true);
        jComboBox7.getSelectedItem();
        varData2 = String.valueOf(jComboBox7.getSelectedItem());
        if ("Extreme Amount".equals(varData2)) {
            varData2 = "ExtremeAmount";
        } else if ("Large Amount".equals(varData2)) {
            varData2 = "LargeAmount";
        } else if ("Small Amount".equals(varData2)) {
            varData2 = "SmallAmount";
        } else if ("Regular Amount".equals(varData2)) {
            varData2 = "RegularAmount";
        }

        Model model = getModelData();

        String queryString
                = getPrefixData()
                + "SELECT ?subject WHERE { ?subject biriyani:hasSpices biriyani:" + varData2 + " }";

        Query query11 = QueryFactory.create(queryString);

        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);

        subCategories.clear();

        try {
            ResultSet resultSet = qexec11.execSelect();
            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                RDFNode name = solution.get("subject");
                subCategories.add(name.toString().split("#")[1]);
                jTextArea1.setText("");
                // Array dataList[];
            }
            String[] dataList = subCategories.toArray(new String[subCategories.size()]);
            String newLine = System.getProperty("line.separator");
            for (int i = 0; i < dataList.length; i++) {
                jTextArea1.append("  " + dataList[i].toString() + newLine);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
        // TODO add your handling code here:    

        jTable1.setVisible(true);
        String calVAL = "500";
        calVAL = jTextField1.getText();
        System.out.println(calVAL + ":::::::::::::::::::;;;" + jComboBox8.getSelectedIndex());

        if (0 == jComboBox8.getSelectedIndex()) {
            varData2 = ">";
        } else if (1 == jComboBox8.getSelectedIndex()) {
            varData2 = "<";
        }

        Model model = getModelData();

        String queryString
                = getPrefixData()
                + "SELECT ?subject ?object WHERE { ?subject biriyani:hasCaloryValue ?object."
                + "FILTER(?object " + varData2 + "" + calVAL + ") } ";

        Query query11 = QueryFactory.create(queryString);

        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);
        System.out.println("======" + qexec11);
        subCategories.clear();

        try {
            ResultSet resultSet = qexec11.execSelect();
            jTextArea1.setText("");

            DefaultTableModel model2;
            model2 = (DefaultTableModel) jTable1.getModel();
            model2.setRowCount(0);

            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                RDFNode bir = solution.get("subject");
                RDFNode obj = solution.get("object");
                System.out.println(bir.toString().split("#")[1]);
                subCategories.add(bir.toString().split("#")[1]);
                subCategories.add(obj.toString().split("http")[0].replace("^^", ""));

            }
            // Array dataList[];
            String[] dataList = subCategories.toArray(new String[subCategories.size()]);
            String newLine = System.getProperty("line.separator");
            for (int i = 0; i < dataList.length; i++) {

                model2.addRow(new Object[]{dataList[i], dataList[i + 1]});

                jTextArea1.append("  " + dataList[i].toString() + newLine);
                i++;

            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed
        // TODO add your handling code here:
        jTable1.setVisible(false);
        jTextArea1.setVisible(true);
        String var3 = null;
        varData2 = String.valueOf(jComboBox10.getSelectedItem());
        if ("RosedChicken".equals(varData2)) {
            var3 = "hasChicken";

        } else if ("SliceChicken".equals(varData2)) {
            var3 = "hasChicken";
        } else if ("TandooriChicken".equals(varData2)) {
            var3 = "hasChicken";
        } else if ("Mutton".equals(varData2)) {
            var3 = "hasMutton";
        } else if ("Lamb".equals(varData2)) {
            var3 = "hasMutton";
        }

        Model model = getModelData();

        String queryString = getPrefixData() + "SELECT ?subject WHERE { ?subject biriyani:" + var3 + " biriyani:" + varData2 + " }";

        Query query11 = QueryFactory.create(queryString);

        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);

        subCategories.clear();
        jTextArea1.setText("");
        try {
            ResultSet resultSet = qexec11.execSelect();
            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                RDFNode name = solution.get("subject");
                subCategories.add(name.toString().split("#")[1]);
            }
            // Array dataList[];
            String[] dataList = subCategories.toArray(new String[subCategories.size()]);
            String newLine = System.getProperty("line.separator");
            for (int i = 0; i < dataList.length; i++) {
                jTextArea1.append("  " + dataList[i].toString() + newLine);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jComboBox10ActionPerformed

    private void jComboBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox9ActionPerformed
        // TODO add your handling code here:
        jTable1.setVisible(false);
        jTextArea1.setVisible(true);
        varData2 = String.valueOf(jComboBox9.getSelectedItem());

        Model model = getModelData();

        String queryString
                = getPrefixData() + "SELECT ?subject WHERE { ?subject biriyani:hasSideDish biriyani:" + varData2 + " }";

        Query query11 = QueryFactory.create(queryString);

        QueryExecution qexec11 = QueryExecutionFactory.create(query11, model);

        subCategories.clear();

        try {
            ResultSet resultSet = qexec11.execSelect();
            while (resultSet.hasNext()) {
                QuerySolution solution = resultSet.nextSolution();
                RDFNode name = solution.get("subject");
                subCategories.add(name.toString().split("#")[1]);
            }
            jTextArea1.setText("");
            // Array dataList[];
            String[] dataList = subCategories.toArray(new String[subCategories.size()]);
            String newLine = System.getProperty("line.separator");
            for (int i = 0; i < dataList.length; i++) {
                jTextArea1.append("  " + dataList[i].toString() + newLine);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jComboBox9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BiryaniUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BiryaniUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BiryaniUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BiryaniUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BiryaniUI().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox10;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
